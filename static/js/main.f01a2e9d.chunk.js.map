{"version":3,"sources":["apiConfig.js","home.js","stations/components/user.js","stations/components/Stations.js","stations/components/viewcars.js","stations/components/selectedStation.js","App.js","stations/api.js","serviceWorker.js","index.js"],"names":["apiUrls","development","production","apiURL","window","location","hostname","Home","React","Component","User","onChange","this","props","handleName","value","name","type","handlePhone","phone","handleEmail","email","handlePassword","password","handleCardNmuber","cardNmuber","handleCardName","cardName","handleCardExpiredDate","cardExpiredDate","handleCVV","cvv","onClick","submition","Station","clickStaion","event","console","log","id","oneStaion","cars","state","className","to","ViewCars","brand","SelectedStation","allCars","length","map","car","index","key","stationName","stationLocation","App","setState","addNewUser","e","preventDefault","setUser","users","target","user","payment","axios","post","then","response","catch","error","station","get","data","stations","exact","path","component","Stations","render","Boolean","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f01a2e9d.chunk.js","sourcesContent":["let apiURL;\nconst expressPort = 5000;\nconst apiUrls = {\n  development: `http://localhost:${expressPort}/api`,\n  production: `https://nameless-journey-52364.herokuapp.com`\n};\nif (window.location.hostname === \"localhost\") {\n  apiURL = apiUrls.development;\n} else {\n  apiURL = apiUrls.production;\n}\n\nexport default apiURL;","import React from 'react';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <>\n        <p>\n          Welcom to car Rent\n          </p>\n      </>\n\n    );\n  }\n}\nexport default Home;","import React from 'react'\n\n\nclass User extends React.Component {\n    render() {\n        return (\n            <div>\n                <form>\n\n                    <lable>Name:</lable>\n                    <br></br>\n                    <input onChange={this.props.handleName}\n                        value={this.props.name}\n                        type='text'></input>\n                    <br></br>\n\n\n                    <label>Phone</label>\n                    <br></br>\n                    <input onChange={this.props.handlePhone}\n                        value={this.props.phone}\n                        type='number'></input>\n                    <br></br>\n\n\n\n                    <label>Email:</label>\n                    <br></br>\n                    <input onChange={this.props.handleEmail}\n                        value={this.props.email}\n                        type='email'></input>\n                    <br></br>\n\n\n\n                    <label>Password:</label>\n                    <br></br>\n                    <input onChange={this.props.handlePassword}\n                        value={this.props.password}\n                        type='password'></input>\n                    <br></br>\n\n\n\n                    <label>Card Number:</label>\n                    <br></br>\n                    <input onChange={this.props.handleCardNmuber}\n                        value={this.props.cardNmuber}\n                        type='number'></input>\n                    <br></br>\n\n\n\n                    <lable>Card Name:</lable>\n                    <br></br>\n                    <input onChange={this.props.handleCardName}\n                        value={this.props.cardName}\n                        type='text'></input>\n                    <br></br>\n\n\n\n                    <label>Expired Date:</label>\n                    <br></br>\n                    <input onChange={this.props.handleCardExpiredDate}\n                        value={this.props.cardExpiredDate}\n                        type='Date'></input>\n                    <br></br>\n\n\n\n                    <label>CVV:</label>\n                    <br></br>\n                    <input onChange={this.props.handleCVV}\n                        value={this.props.cvv}\n                        type='number'></input>\n                    <br></br>\n\n\n\n                    <button onClick={this.props.submition}>submit</button>\n\n                </form>\n\n                {/* onClick={this.props.addNewUser}  */}\n\n            </div>\n\n        );\n    }\n}\nexport default User;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nclass Station extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n    clickStaion = (event) => {\n        //     // event.preventDefault();\n        //     // this.props.stationDetalis(this.props.id);\n        console.log('hi', this.props.id)\n        // this.setState({stationName: this.props.name})\n        this.props.oneStaion(this.props.name, this.props.location, this.props.cars)\n    }\n    render() {\n        return (\n            <div className=\"styles\">\n                <Link to=\"/selected-Station\" onClick={this.clickStaion} >\n                    {this.props.name}\n                </Link> <br />\n                {this.props.location} <br />\n            </div>\n        )\n    }\n}\nexport default Station;","import React from \"react\";\nclass ViewCars extends React.Component {\n    render() {\n        console.log('view cars')\n        return (\n            <>\n                {this.props.brand} <br />\n                {/* {this.props.type} */}\n            </>\n        );\n    }\n}\nexport default ViewCars;\n","import React from \"react\";\nimport ViewCars from \"./viewcars\";\nclass SelectedStation extends React.Component {\n    render() {\n        let allCars = <p>no Cars at this Station</p>\n        if (this.props.cars.length > 0) {\n            allCars = this.props.cars.map((car, index) => {\n                return (\n                    <ViewCars brand={car.brand}\n                        type={car.type}\n                        key={index}\n                    />\n                )\n            })\n        }\n        return (\n            <>\n                <p>station info</p>\n                {this.props.stationName} <br />\n                {this.props.stationLocation} <br />\n                <ViewCars\n                />\n                {allCars}\n            </>\n        )\n    }\n}\nexport default SelectedStation;","import React from 'react';\nimport './App.css';\nimport apiURL from './apiConfig';\nimport Home from \"./home\";\nimport User from \"./stations/components/user\";\nimport Stations from \"./stations/components/Stations\";\nimport SelectedStation from \"./stations/components/selectedStation\"\nimport { getAllStation, addNewUser } from \"./stations/api\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      station: [],\n      stationName: '',\n      stationLocation: ''\n    };\n\n    this.state = {\n      name: \" \",\n      phone: \" \",\n      email: \" \",\n      password: \" \",\n      payment: {\n        cardNmuber: \" \",\n        cardName: \" \",\n        cardExpiredDate: \" \",\n        cvv: \" \"\n      },\n      addNewUser: []\n\n    };\n    console.log('My API url is : ', apiURL)\n  }\n\n  componentDidMount() {\n    getAllStation()\n      .then(response => {\n        console.log('rerender here');\n        this.setState({ station: response.data.stations });\n      })\n      .catch(error => {\n        console.log(\"API ERROR:\", error);\n      });\n  }\n  oneStaion = (stationName, stationLocation, cars) => {\n    this.setState({\n      stationName: stationName,\n      stationLocation: stationLocation,\n      car: cars\n    })\n  }\n\n\n  addNewUser = e => {\n\n    e.preventDefault();\n\n\n    this.setState({\n      addNewUser: [\n        ...this.state.addNewUser,\n        [\n          this.state.name,\n          this.state.phone,\n          this.state.email,\n          this.state.password,\n          this.state.cardNmuber,\n          this.state.cardName,\n          this.state.cardExpiredDate,\n          this.state.cvv\n        ]\n      ],\n      name: \"\",\n      phone: \"\",\n      email: \"\",\n      password: \"\",\n      cardNmuber: \"\",\n      cardName: \"\",\n      cardExpiredDate: \"\",\n      cvv: \"\"\n    })\n    console.log(this.state.addNewUser);\n    console.log(\"add user\");\n  }\n\n\n\n\n  setUser = (users) => {\n    this.setState({ users: users })\n  }\n  //create new arrticle \n  handleName = (e) => {\n\n    this.setState({ name: e.target.value })\n    console.log(this.state.name);\n\n  }\n  handlePhone = (e) => {\n    this.setState({ phone: e.target.value })\n    console.log(this.state.phone);\n  }\n  handleEmail = (e) => {\n    this.setState({ email: e.target.value })\n    console.log(this.state.email);\n  }\n\n  handlePassword = (e) => {\n    this.setState({ password: e.target.value })\n    console.log(this.state.password);\n  }\n\n  handleCardNmuber = (e) => {\n    this.setState({ cardNmuber: e.target.value })\n    console.log(this.state.cardNmuber);\n  }\n\n  handleCardName = (e) => {\n    this.setState({ cardName: e.target.value })\n    console.log(this.state.cardName);\n  }\n\n\n  handleCardExpiredDate = (e) => {\n    this.setState({ cardExpiredDate: e.target.value })\n    console.log(this.state.cardExpiredDate);\n  }\n\n  handleCVV = (e) => {\n    this.setState({ cvv: e.target.value })\n    console.log(this.state.cvv);\n  }\n\n\n  submition = (e) => {\n\n    console.log(`the User created`);\n    addNewUser(\n      {\n        user:\n        {\n          name: this.state.name,\n          phone: this.state.phone,\n          email: this.state.email,\n          password: this.state.password,\n          payment: {\n            cardNmuber: this.state.cardNmuber,\n            cardName: this.state.cardName,\n            cardExpiredDate: this.state.cardExpiredDate,\n            cvv: this.state.cvv\n          }\n        }\n      }\n    )\n      .then((response) => {\n        this.setState({\n          user: [\n            ...this.state.user,\n            {\n              name: this.state.name,\n              phone: this.state.phone,\n              email: this.state.email,\n              password: this.state.password,\n              payment: {\n                cardNmuber: this.state.cardNmuber,\n                cardName: this.state.cardName,\n                cardExpiredDate: this.state.cardExpiredDate,\n                cvv: this.state.cvv\n              }\n            }\n          ],\n          name: '',\n          phone: '',\n          email: '',\n          password: '',\n          payment: {\n            cardNmuber: '',\n            cardName: '',\n            cardExpiredDate: '',\n            cvv: ''\n          }\n        })\n      }).catch((error) => {\n        console.log('api add new user error :', error)\n      })\n  }\n\n\n\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <nav>\n            <Link to=\"/\">Home</Link>{' '}\n            <Link to=\"/AllStation\">Find a Station</Link>{' '}\n            <Link to=\"/User\">User</Link>\n          </nav>\n\n          <div>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/AllStation\"\n              component={() => (\n                <Stations\n                  oneStaion={this.oneStaion}\n                  station={this.state.station}\n\n\n                />\n              )}\n            />\n            <Route path=\"/User\"\n\n              render={() => (\n\n                <User\n\n                  handleName={this.handleName}\n                  handlePhone={this.handlePhone}\n                  handleEmail={this.handleEmail}\n                  handlePassword={this.handlePassword}\n                  handleCardNmuber={this.handleCardNmuber}\n                  handleCardName={this.handleCardName}\n                  handleCardExpiredDate={this.handleCardExpiredDate}\n                  handleCVV={this.handleCVV}\n                  addNewUser={this.addNewUser}\n                  submition={this.submition}\n\n                />\n              )}\n\n            />\n\n            <Route\n              path=\"/selected-station\"\n              component={() => (\n                <SelectedStation\n                  //  station={this.state.station}\n                  //  oneStaion={this.oneStaion}\n                  stationName={this.state.stationName}\n                  stationLocation={this.state.stationLocation}\n                />)}\n\n            />\n\n          </div>\n        </Router>\n\n\n      </div>\n    );\n  }\n}\nexport default App;\n","import apiURL from \"../apiConfig\";\nimport axios from \"axios\";\n\nconst getAllStation = () => {\n  return axios.get(`${apiURL}/stations`);\n};\n\nconst getAllCars = () => {\n  return axios.get(`${apiURL}/cars`);\n};\n\nconst addNewUser = (user) => {\n  console.log('addNewUser', user)\n  return axios.post(`${apiURL}/user`, user);\n}\n\nexport { getAllStation, getAllCars, addNewUser };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}